/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package com.institute_management.DeativateCourses;

import com.institute_management.DataSourse.DataSource;
import com.institute_management.student.BEAN.Student;
import java.awt.Image;
import java.sql.Connection;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.text.DateFormat;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Vector;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JFrame;
import javax.swing.JOptionPane;
import javax.swing.UIManager;
import javax.swing.UnsupportedLookAndFeelException;
import javax.swing.event.TableModelEvent;
import javax.swing.event.TableModelListener;
import javax.swing.table.DefaultTableModel;
import javax.swing.table.TableModel;

/**
 *
 * @author malindad
 */
public class SelectCourses extends javax.swing.JFrame {

    DactDbConnection dbCon = new DactDbConnection();
    ArrayList<Student> stList;

    /**
     * Creates new form SelectCourses
     */
    public SelectCourses() {
        initComponents();
        
        //loadImage
        
        
        
        Date date = new Date();
        RegDate.setDate(date);
        //load copy from drop down
        PreparedStatement stmt1 = null;
        ResultSet result1 = null;

        try {
            DataSource d = new DataSource();
            Connection con = d.getConnection();
            String query1 = "SELECT `course_id` FROM `course` where status = 'ACT' and course_id in (select distinct course_id from `student-course`)";

            stmt1 = con.prepareStatement(query1);
            result1 = stmt1.executeQuery();
            cmbCopyFrom.removeAllItems();
            int count = 0;
            while (result1.next()) {
                count++;
                String role = result1.getString("course_id");
                cmbCopyFrom.addItem(role);
            }

            result1.close();
            stmt1.close();

        } catch (Exception ex) {
            System.out.println(ex);
        }
        
        
        //lecture names
         try {
             DataSource d = new DataSource();
        Connection con = d.getConnection();
            String query1 = "SELECT `name` FROM `lecturer` ";

            stmt1 = con.prepareStatement(query1);
            result1 = stmt1.executeQuery();

            while (result1.next()) {
                String role = result1.getString("name");
                cmbLecName.addItem(role);
            }

            result1.close();
            stmt1.close();

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jLabel5 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        cmbLecName = new javax.swing.JComboBox();
        cmbCourseID = new javax.swing.JComboBox();
        jButton4 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        cmbCopyTo = new javax.swing.JComboBox();
        cmbCopyFrom = new javax.swing.JComboBox();
        jScrollPane2 = new javax.swing.JScrollPane();
        tblFrom = new javax.swing.JTable();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTo = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jCheckBox1 = new javax.swing.JCheckBox();
        RegDate = new com.toedter.calendar.JDateChooser();
        jButton3 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jPanel3.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        jLabel5.setText("Select Lecturer Name");

        jLabel3.setText("Select Course");

        cmbLecName.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                cmbLecNameMouseClicked(evt);
            }
        });
        cmbLecName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbLecNameActionPerformed(evt);
            }
        });

        jButton4.setText("Deactivate");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 18, Short.MAX_VALUE)
                        .addComponent(cmbLecName, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel3)
                                .addGap(18, 18, 18)
                                .addComponent(cmbCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, 322, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addComponent(jButton4, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 108, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap())
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(25, 25, 25)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel5)
                    .addComponent(cmbLecName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCourseID, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 29, Short.MAX_VALUE)
                .addComponent(jButton4)
                .addContainerGap())
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(27, 27, 27)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(453, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(383, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Course Deactivate", jPanel2);

        jLabel1.setText("Copy From");

        jLabel2.setText("Copy To");

        cmbCopyFrom.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCopyFromActionPerformed(evt);
            }
        });

        tblFrom.setFont(new java.awt.Font("Cambria", 0, 11)); // NOI18N
        tblFrom.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblFrom.setGridColor(new java.awt.Color(255, 255, 255));
        tblFrom.setShowVerticalLines(false);
        jScrollPane2.setViewportView(tblFrom);
        if (tblFrom.getColumnModel().getColumnCount() > 0) {
            tblFrom.getColumnModel().getColumn(0).setMinWidth(80);
            tblFrom.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblFrom.getColumnModel().getColumn(0).setMaxWidth(80);
            tblFrom.getColumnModel().getColumn(2).setMinWidth(50);
            tblFrom.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblFrom.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        tblTo.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));
        tblTo.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "", "", ""
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.Object.class, java.lang.Boolean.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        tblTo.setGridColor(new java.awt.Color(255, 255, 255));
        tblTo.setShowVerticalLines(false);
        jScrollPane1.setViewportView(tblTo);
        if (tblTo.getColumnModel().getColumnCount() > 0) {
            tblTo.getColumnModel().getColumn(0).setMinWidth(80);
            tblTo.getColumnModel().getColumn(0).setPreferredWidth(80);
            tblTo.getColumnModel().getColumn(0).setMaxWidth(80);
            tblTo.getColumnModel().getColumn(2).setMinWidth(50);
            tblTo.getColumnModel().getColumn(2).setPreferredWidth(50);
            tblTo.getColumnModel().getColumn(2).setMaxWidth(50);
        }

        jButton1.setText(">");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setText("<");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jCheckBox1.setText("Select All");
        jCheckBox1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jCheckBox1ActionPerformed(evt);
            }
        });

        RegDate.setDateFormatString("yyyy-MM-dd");

        jButton3.setText("Copy Course");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jCheckBox1, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel1)
                        .addComponent(cmbCopyFrom, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton2)
                    .addComponent(jButton1))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 34, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2)
                    .addComponent(cmbCopyTo, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 427, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(RegDate, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(54, 54, 54)
                        .addComponent(jButton3)))
                .addGap(14, 14, 14))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cmbCopyFrom, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbCopyTo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(199, 199, 199)
                        .addComponent(jButton1)
                        .addGap(18, 18, 18)
                        .addComponent(jButton2))
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 428, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jCheckBox1)
                    .addComponent(RegDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3))
                .addContainerGap(35, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Copy Course", jPanel1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jTabbedPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 613, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 22, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void cmbCopyFromActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCopyFromActionPerformed
        //load copyTo drop down
        PreparedStatement stmt1 = null;
        ResultSet result1 = null;

        try {
            DataSource d = new DataSource();
            Connection con = d.getConnection();
            String query1 = "SELECT `course_id` FROM `course` where status = 'ACT' and course_id not in (select distinct course_id from `student-course`)";

            stmt1 = con.prepareStatement(query1);
            result1 = stmt1.executeQuery();
            cmbCopyTo.removeAllItems();
            int count = 0;
            cmbCopyTo.addItem("--Select Course--");
            while (result1.next()) {
                count++;

                String role = result1.getString("course_id");
                cmbCopyTo.addItem(role);
            }

            result1.close();
            stmt1.close();

        } catch (Exception ex) {
            System.out.println(ex);
        }

        //load students
        loadStudent();
    }//GEN-LAST:event_cmbCopyFromActionPerformed

    private void jCheckBox1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jCheckBox1ActionPerformed

        try {

            if (jCheckBox1.isSelected()) {
                for (int x = 0, y = tblFrom.getRowCount(); x < y; x++) {
                    tblFrom.setValueAt(true, x, 2);
                }

            } else {
                for (int x = 0, y = tblFrom.getRowCount(); x < y; x++) {
                    tblFrom.setValueAt(false, x, 2);
                }
            }
        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jCheckBox1ActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        DefaultTableModel model1 = (DefaultTableModel) tblFrom.getModel();
        DefaultTableModel model2 = (DefaultTableModel) tblTo.getModel();
        model2.setRowCount(0);
        for (int x = 0, y = tblFrom.getRowCount(); x < y; x++) {

            Object[] rowObj = new Object[3];
            rowObj[0] = model1.getValueAt(x, 0);
            rowObj[1] = model1.getValueAt(x, 1);
            rowObj[2] = model1.getValueAt(x, 2);
            if (rowObj[2].toString().equals("true")) {
                model2.addRow(rowObj);
            }

        }
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        DefaultTableModel model2 = (DefaultTableModel) tblTo.getModel();
        for (int x = 0, y = tblTo.getRowCount(); x < y; x++) {
            if (model2.getValueAt(x, 2).toString().equals("true")) {
                model2.removeRow(x);
                x--;// this is becouse, onece it remove the row, table row count decreese by one. So to check next row, we also should decrees the row count
            }
        }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        if (cmbCopyTo.getSelectedItem().toString().equals("--Select Course--")) {
            JOptionPane.showMessageDialog(new JFrame(), "Select To Course And Try Again..");
        } else {
            Date RegDatee = RegDate.getDate();
            DateFormat dateFormat = new SimpleDateFormat("YYYY-MM-dd");
            String S_RegDate = dateFormat.format(RegDatee);

            ArrayList<String> SList = new ArrayList<String>();
            DefaultTableModel model2 = (DefaultTableModel) tblTo.getModel();
            for (int x = 0, y = tblTo.getRowCount(); x < y; x++) {
                if (model2.getValueAt(x, 2).toString().equals("true")) {
                    SList.add(model2.getValueAt(x, 0).toString());
                }
            }
            boolean okay = dbCon.InsertStudentsIntoNewCourse(cmbCopyTo.getSelectedItem().toString(), cmbCopyFrom.getSelectedItem().toString(), SList, S_RegDate);
            if (okay) {

                JOptionPane.showMessageDialog(new JFrame(), cmbCopyFrom.getSelectedItem().toString() + " class successfuly deactivated");

            }
        }
    }//GEN-LAST:event_jButton3ActionPerformed

    private void cmbLecNameMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_cmbLecNameMouseClicked

    }//GEN-LAST:event_cmbLecNameMouseClicked

    private void cmbLecNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbLecNameActionPerformed
        PreparedStatement stmt1 = null;
        ResultSet result1 = null;

        try {
            DataSource d = new DataSource();
            Connection con = d.getConnection();
            String query1 = "SELECT `course_id` FROM `course` where status = 'ACT' and lecturer_id = (select id from lecturer where name='"+cmbLecName.getSelectedItem().toString()+"')";

            stmt1 = con.prepareStatement(query1);
            result1 = stmt1.executeQuery();
            cmbCourseID.removeAllItems();
            int count=0;
            while (result1.next()) {
                count++;
                if(count==1){
                    cmbCourseID.addItem("All");
                }
                String role = result1.getString("course_id");
                cmbCourseID.addItem(role);
            }

            result1.close();
            stmt1.close();

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_cmbLecNameActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
       dbCon.DeactCourse(cmbCourseID.getSelectedItem().toString());
       
       PreparedStatement stmt1 = null;
        ResultSet result1 = null;

        try {
            DataSource d = new DataSource();
            Connection con = d.getConnection();
            String query1 = "SELECT `course_id` FROM `course` where status = 'ACT' and lecturer_id = (select id from lecturer where name='"+cmbLecName.getSelectedItem().toString()+"')";

            stmt1 = con.prepareStatement(query1);
            result1 = stmt1.executeQuery();
            cmbCourseID.removeAllItems();
            int count=0;
            while (result1.next()) {
                count++;
                if(count==1){
                    cmbCourseID.addItem("All");
                }
                String role = result1.getString("course_id");
                cmbCourseID.addItem(role);
            }

            result1.close();
            stmt1.close();

        } catch (Exception ex) {
            System.out.println(ex);
        }
    }//GEN-LAST:event_jButton4ActionPerformed
    public void loadStudent() {
        try {

            HashMap<Integer, Object[]> tblData = dbCon.selectStudentsInACourse(cmbCopyFrom.getSelectedItem().toString());
            DefaultTableModel model = (DefaultTableModel) tblFrom.getModel();
            model.setRowCount(0);
            for (int i = 1; i <= tblData.size(); i++) {
                model.addRow(tblData.get(i));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(new JFrame(), "Error Occured in data loading");
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {

        try {
            /* Set the Nimbus look and feel */
            //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
            /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
            * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html
            */
            try {
                for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                    if ("Nimbus".equals(info.getName())) {
                        javax.swing.UIManager.setLookAndFeel(info.getClassName());
                        break;
                    }
                }
            } catch (ClassNotFoundException ex) {
                java.util.logging.Logger.getLogger(SelectCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (InstantiationException ex) {
                java.util.logging.Logger.getLogger(SelectCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (IllegalAccessException ex) {
                java.util.logging.Logger.getLogger(SelectCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            } catch (javax.swing.UnsupportedLookAndFeelException ex) {
                java.util.logging.Logger.getLogger(SelectCourses.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
            }
            //</editor-fold>
            //UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
           // UIManager.setLookAndFeel("com.jtattoo.plaf.texture.TextureLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.smart.SmartLookAndFeel");
            UIManager.setLookAndFeel("com.jtattoo.plaf.noire.NoireLookAndFeel");
           // UIManager.setLookAndFeel("com.jtattoo.plaf.acryl.AcrylLookAndFeel");
           // UIManager.setLookAndFeel("com.jtattoo.plaf.aero.AeroLookAndFeel");
           //UIManager.setLookAndFeel("com.jtattoo.plaf.aluminium.AluminiumLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.bernstein.BernsteinLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.fast.FastLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.graphite.GraphiteLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.hifi.HiFiLookAndFeel");
           // UIManager.setLookAndFeel("com.jtattoo.plaf.luna.LunaLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.mcwin.McWinLookAndFeel");
          //  UIManager.setLookAndFeel("com.jtattoo.plaf.mint.MintLookAndFeel");
          
            
            /* Create and display the form */
            java.awt.EventQueue.invokeLater(new Runnable() {
                public void run() {
                    new SelectCourses().setVisible(true);
                }
            });
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(SelectCourses.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            Logger.getLogger(SelectCourses.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            Logger.getLogger(SelectCourses.class.getName()).log(Level.SEVERE, null, ex);
        } catch (UnsupportedLookAndFeelException ex) {
            Logger.getLogger(SelectCourses.class.getName()).log(Level.SEVERE, null, ex);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private com.toedter.calendar.JDateChooser RegDate;
    private javax.swing.JComboBox cmbCopyFrom;
    private javax.swing.JComboBox cmbCopyTo;
    private javax.swing.JComboBox cmbCourseID;
    private javax.swing.JComboBox cmbLecName;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JCheckBox jCheckBox1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JTable tblFrom;
    private javax.swing.JTable tblTo;
    // End of variables declaration//GEN-END:variables
}
